(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["npm.microsoft+applicationinsights-properties-js@2.5.4"],{

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js":
/*!************************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js ***!
  \************************************************************************************************************************************************************************************************************************************/
/*! exports provided: Application */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Application", function() { return Application; });
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var Application = /** @class */ (function () {
    function Application() {
    }
    return Application;
}());

//# sourceMappingURL=Application.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js ***!
  \*******************************************************************************************************************************************************************************************************************************/
/*! exports provided: Device */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Device", function() { return Device; });
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var Device = /** @class */ (function () {
    /**
     * Constructs a new instance of the Device class
     */
    function Device() {
        // don't attempt to fingerprint browsers
        this.id = "browser";
        // Device type is a dimension in our data platform
        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions
        this.deviceClass = "Browser";
    }
    return Device;
}());

//# sourceMappingURL=Device.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! exports provided: Internal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Internal", function() { return Internal; });
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var Version = "2.5.4";
var Internal = /** @class */ (function () {
    /**
     * Constructs a new instance of the internal telemetry data class.
     */
    function Internal(config) {
        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + "_" : "") + "javascript:" + Version;
    }
    return Internal;
}());

//# sourceMappingURL=Internal.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! exports provided: Location */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return Location; });
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var Location = /** @class */ (function () {
    function Location() {
    }
    return Location;
}());

//# sourceMappingURL=Location.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js ***!
  \********************************************************************************************************************************************************************************************************************************/
/*! exports provided: Session, _SessionManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Session", function() { return Session; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_SessionManager", function() { return _SessionManager; });
/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "../../node_modules/.pnpm/@microsoft+applicationinsights-common@2.5.4/node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");
/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "../../node_modules/.pnpm/@microsoft+applicationinsights-core-js@2.5.4/node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.


var Session = /** @class */ (function () {
    function Session() {
    }
    return Session;
}());

var _SessionManager = /** @class */ (function () {
    function _SessionManager(config, logger) {
        var _this = this;
        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(logger)) {
            this._logger = new _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["DiagnosticLogger"]();
        }
        else {
            this._logger = logger;
        }
        if (!config) {
            config = {};
        }
        if (!(typeof config.sessionExpirationMs === "function")) {
            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };
        }
        if (!(typeof config.sessionRenewalMs === "function")) {
            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };
        }
        this.config = config;
        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };
        this.automaticSession = new Session();
    }
    _SessionManager.prototype.update = function () {
        if (!this.automaticSession.id) {
            this.initializeAutomaticSession();
        }
        var now = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();
        var acquisitionExpired = this.config.sessionExpirationMs() === 0 ? false : now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();
        var renewalExpired = this.config.sessionExpirationMs() === 0 ? false : now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();
        // renew if acquisitionSpan or renewalSpan has ellapsed
        if (acquisitionExpired || renewalExpired) {
            // update automaticSession so session state has correct id
            this.renew();
        }
        else {
            // do not update the cookie more often than cookieUpdateInterval
            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {
                this.automaticSession.renewalDate = now;
                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);
            }
        }
    };
    /**
     *  Record the current state of the automatic session and store it in our cookie string format
     *  into the browser's local storage. This is used to restore the session data when the cookie
     *  expires.
     */
    _SessionManager.prototype.backup = function () {
        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);
    };
    /**
     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to
     *  initialize the automatic session.
     */
    _SessionManager.prototype.initializeAutomaticSession = function () {
        var cookie = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getCookie(this._logger, this._storageNamePrefix());
        if (cookie && typeof cookie.split === "function") {
            this.initializeAutomaticSessionWithData(cookie);
        }
        else {
            // There's no cookie, but we might have session data in local storage
            // This can happen if the session expired or the user actively deleted the cookie
            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.
            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.
            var storage = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getStorage(this._logger, this._storageNamePrefix());
            if (storage) {
                this.initializeAutomaticSessionWithData(storage);
            }
        }
        if (!this.automaticSession.id) {
            this.renew();
        }
    };
    /**
     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and
     *  use this data to initialize automaticSession.
     *
     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup
     */
    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {
        var params = sessionData.split("|");
        if (params.length > 0) {
            this.automaticSession.id = params[0];
        }
        try {
            if (params.length > 1) {
                var acq = +params[1];
                this.automaticSession.acquisitionDate = +new Date(acq);
                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;
            }
            if (params.length > 2) {
                var renewal = +params[2];
                this.automaticSession.renewalDate = +new Date(renewal);
                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;
            }
        }
        catch (e) {
            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].ErrorParsingAISessionCookie, "Error parsing ai_session cookie, session will be reset: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e) });
        }
        if (this.automaticSession.renewalDate === 0) {
            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].SessionRenewalDateIsZero, "AI session renewal date is 0, session will be reset.");
        }
    };
    _SessionManager.prototype.renew = function () {
        var now = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();
        this.automaticSession.id = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].newId();
        this.automaticSession.acquisitionDate = now;
        this.automaticSession.renewalDate = now;
        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);
        // If this browser does not support local storage, fire an internal log to keep track of it at this point
        if (!_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].canUseLocalStorage()) {
            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserDoesNotSupportLocalStorage, "Browser does not support local storage. Session durations will be inaccurate.");
        }
    };
    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {
        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner
        // Expiring the cookie will cause the session to expire even if the user isn't on the page
        var acquisitionExpiry = acq + this.config.sessionExpirationMs();
        var renewalExpiry = renewal + this.config.sessionRenewalMs();
        var cookieExpiry = new Date();
        var cookie = [guid, acq, renewal];
        if (acquisitionExpiry < renewalExpiry) {
            cookieExpiry.setTime(acquisitionExpiry);
        }
        else {
            cookieExpiry.setTime(renewalExpiry);
        }
        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;
        // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie
        // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.  
        // Another browser instance does not inherit this cookie.
        var UTCString = this.config.sessionExpirationMs() === 0 ? '0' : cookieExpiry.toUTCString();
        _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + UTCString, cookieDomnain);
        this.cookieUpdatedTimestamp = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();
    };
    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {
        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires
        // Browsers that don't support local storage won't be able to end sessions cleanly from the client
        // The server will notice this and end the sessions itself, with loss of accurate session duration
        _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));
    };
    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms
    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms
    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms
    _SessionManager.cookieNameConst = 'ai_session';
    return _SessionManager;
}());

//# sourceMappingURL=Session.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js":
/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js ***!
  \***************************************************************************************************************************************************************************************************************************************/
/*! exports provided: TelemetryTrace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TelemetryTrace", function() { return TelemetryTrace; });
/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "../../node_modules/.pnpm/@microsoft+applicationinsights-common@2.5.4/node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");
/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "../../node_modules/.pnpm/@microsoft+applicationinsights-core-js@2.5.4/node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.


var TelemetryTrace = /** @class */ (function () {
    function TelemetryTrace(id, parentId, name, logger) {
        this.traceID = id || _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId();
        this.parentID = parentId;
        this.name = name;
        var location = Object(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["getLocation"])();
        if (!name && location && location.pathname) {
            this.name = location.pathname;
        }
        this.name = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DataSanitizer"].sanitizeString(logger, this.name);
    }
    return TelemetryTrace;
}());

//# sourceMappingURL=TelemetryTrace.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js ***!
  \*****************************************************************************************************************************************************************************************************************************/
/*! exports provided: User */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return User; });
/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "../../node_modules/.pnpm/@microsoft+applicationinsights-common@2.5.4/node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");
/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "../../node_modules/.pnpm/@microsoft+applicationinsights-core-js@2.5.4/node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.


var User = /** @class */ (function () {
    function User(config, logger) {
        this.isNewUser = false;
        this._logger = logger;
        // get userId or create new one if none exists
        var cookie = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getCookie(this._logger, User.userCookieName);
        if (cookie) {
            this.isNewUser = false;
            var params = cookie.split(User.cookieSeparator);
            if (params.length > 0) {
                this.id = params[0];
            }
        }
        this.config = config;
        if (!this.id) {
            this.id = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].newId();
            var date = new Date();
            var acqStr = _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].toISOString(date);
            this.accountAcquisitionDate = acqStr;
            this.isNewUser = true;
            // without expiration, cookies expire at the end of the session
            // set it to 365 days from now
            // 365 * 24 * 60 * 60 * 1000 = 31536000000 
            date.setTime(date.getTime() + 31536000000);
            var newCookie = [this.id, acqStr];
            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;
            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);
            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.
            // We should respect their wishes and clear ourselves from local storage
            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';
            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].removeStorage(this._logger, name_1);
        }
        // We still take the account id from the ctor param for backward compatibility. 
        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.
        this.accountId = config.accountId ? config.accountId() : undefined;
        // Get the auth user id and account id from the cookie if exists
        // Cookie is in the pattern: <authenticatedId>|<accountId>
        var authCookie = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getCookie(this._logger, User.authUserCookieName);
        if (authCookie) {
            authCookie = decodeURI(authCookie);
            var authCookieString = authCookie.split(User.cookieSeparator);
            if (authCookieString[0]) {
                this.authenticatedId = authCookieString[0];
            }
            if (authCookieString.length > 1 && authCookieString[1]) {
                this.accountId = authCookieString[1];
            }
        }
    }
    /**
     * Sets the authenticated user id and the account id in this session.
     *
     * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.
     * @param accountId {string} - An optional string to represent the account associated with the authenticated user.
     */
    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {
        if (storeInCookie === void 0) { storeInCookie = false; }
        // Validate inputs to ensure no cookie control characters.
        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));
        if (isInvalidInput) {
            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].SetAuthContextFailedAccountName, "Setting auth user context failed. " +
                "User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.", true);
            return;
        }
        // Create cookie string.
        this.authenticatedId = authenticatedUserId;
        var authCookie = this.authenticatedId;
        if (accountId) {
            this.accountId = accountId;
            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);
        }
        if (storeInCookie) {
            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).
            // Encoding the cookie to handle unexpected unicode characters.
            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());
        }
    };
    /**
     * Clears the authenticated user id and the account id from the user context.
     * @returns {}
     */
    User.prototype.clearAuthenticatedUserContext = function () {
        this.authenticatedId = null;
        this.accountId = null;
        _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].deleteCookie(this._logger, User.authUserCookieName);
    };
    User.prototype.validateUserInput = function (id) {
        // Validate:
        // 1. Id is a non-empty string.
        // 2. It does not contain special characters for cookies.
        if (typeof id !== 'string' ||
            !id ||
            id.match(/,|;|=| |\|/)) {
            return false;
        }
        return true;
    };
    User.cookieSeparator = '|';
    User.userCookieName = 'ai_user';
    User.authUserCookieName = 'ai_authUser';
    return User;
}());

//# sourceMappingURL=User.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/.pnpm/tslib@1.14.1/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "../../node_modules/.pnpm/@microsoft+applicationinsights-core-js@2.5.4/node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");
/* harmony import */ var _TelemetryContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TelemetryContext */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js");
/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "../../node_modules/.pnpm/@microsoft+applicationinsights-common@2.5.4/node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");
/**
 * PropertiesPlugin.ts
 * @copyright Microsoft 2018
 */




var PropertiesPlugin = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PropertiesPlugin, _super);
    function PropertiesPlugin() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.priority = 110;
        _this.identifier = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["PropertiesPluginIdentifier"];
        return _this;
    }
    PropertiesPlugin.getDefaultConfig = function () {
        var defaultConfig = {
            instrumentationKey: function () { return undefined; },
            accountId: function () { return null; },
            sessionRenewalMs: function () { return 30 * 60 * 1000; },
            samplingPercentage: function () { return 100; },
            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },
            cookieDomain: function () { return null; },
            sdkExtension: function () { return null; },
            isBrowserLinkTrackingEnabled: function () { return false; },
            appId: function () { return null; },
            namePrefix: function () { return undefined; }
        };
        return defaultConfig;
    };
    PropertiesPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {
        var _this = this;
        _super.prototype.initialize.call(this, config, core, extensions, pluginChain);
        var ctx = this._getTelCtx();
        var identifier = this.identifier;
        var defaultConfig = PropertiesPlugin.getDefaultConfig();
        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();
        var _loop_1 = function (field) {
            this_1._extensionConfig[field] = function () { return ctx.getConfig(identifier, field, defaultConfig[field]()); };
        };
        var this_1 = this;
        for (var field in defaultConfig) {
            _loop_1(field);
        }
        this.context = new _TelemetryContext__WEBPACK_IMPORTED_MODULE_2__["TelemetryContext"](core.logger, this._extensionConfig);
        this._breezeChannel = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Util"].getExtension(extensions, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["BreezeChannelIdentifier"]);
        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel["_appId"] : null; };
    };
    /**
     * Add Part A fields to the event
     * @param event The event that needs to be processed
     */
    PropertiesPlugin.prototype.processTelemetry = function (event, itemCtx) {
        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(event)) {
            // TODO(barustum): throw an internal event once we have support for internal logging
        }
        else {
            itemCtx = this._getTelCtx(itemCtx);
            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.
            if (event.name === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["PageView"].envelopeType) {
                itemCtx.diagLog().resetInternalMessageCount();
            }
            if (this.context.session) {
                // If customer did not provide custom session id update the session manager
                if (typeof this.context.session.id !== "string") {
                    this.context.sessionManager.update();
                }
            }
            this._processTelemetryInternal(event, itemCtx);
            if (this.context && this.context.user && this.context.user.isNewUser) {
                this.context.user.isNewUser = false;
                var message = new _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalLogMessage"](_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].SendBrowserInfoOnUserInit, ((Object(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["getNavigator"])() || {}).userAgent || ""));
                itemCtx.diagLog().logInternalMessage(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, message);
            }
            this.processNext(event, itemCtx);
        }
    };
    PropertiesPlugin.prototype._processTelemetryInternal = function (event, itemCtx) {
        // set part A  fields
        if (!event.tags) {
            event.tags = [];
        }
        if (!event.ext) {
            event.ext = {};
        }
        var ext = event.ext;
        ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].DeviceExt] = ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].DeviceExt] || {};
        ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].WebExt] = ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].WebExt] || {};
        ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].UserExt] = ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].UserExt] || {};
        ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].OSExt] = ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].OSExt] || {};
        ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].AppExt] = ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].AppExt] || {};
        ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].TraceExt] = ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Extensions"].TraceExt] || {};
        var context = this.context;
        context.applySessionContext(event, itemCtx);
        context.applyApplicationContext(event, itemCtx);
        context.applyDeviceContext(event, itemCtx);
        context.applyOperationContext(event, itemCtx);
        context.applyUserContext(event, itemCtx);
        context.applyOperatingSystemContxt(event, itemCtx);
        context.applyWebContext(event, itemCtx);
        context.applyLocationContext(event, itemCtx); // legacy tags
        context.applyInternalContext(event, itemCtx); // legacy tags
        context.cleanUp(event, itemCtx);
    };
    return PropertiesPlugin;
}(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["BaseTelemetryPlugin"]));
/* harmony default export */ __webpack_exports__["default"] = (PropertiesPlugin);
//# sourceMappingURL=PropertiesPlugin.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! exports provided: TelemetryContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TelemetryContext", function() { return TelemetryContext; });
/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "../../node_modules/.pnpm/@microsoft+applicationinsights-core-js@2.5.4/node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");
/* harmony import */ var _Context_Session__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Context/Session */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js");
/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "../../node_modules/.pnpm/@microsoft+applicationinsights-common@2.5.4/node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");
/* harmony import */ var _Context_Application__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Context/Application */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js");
/* harmony import */ var _Context_Device__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Context/Device */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js");
/* harmony import */ var _Context_Internal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Context/Internal */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js");
/* harmony import */ var _Context_User__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Context/User */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js");
/* harmony import */ var _Context_Location__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Context/Location */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js");
/* harmony import */ var _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Context/TelemetryTrace */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js");
/**
 * PropertiesPlugin.ts
 * @copyright Microsoft 2018
 */









var TelemetryContext = /** @class */ (function () {
    function TelemetryContext(logger, defaultConfig) {
        if (Object(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["hasWindow"])()) {
            this.sessionManager = new _Context_Session__WEBPACK_IMPORTED_MODULE_1__["_SessionManager"](defaultConfig, logger);
            this.application = new _Context_Application__WEBPACK_IMPORTED_MODULE_3__["Application"]();
            this.device = new _Context_Device__WEBPACK_IMPORTED_MODULE_4__["Device"]();
            this.internal = new _Context_Internal__WEBPACK_IMPORTED_MODULE_5__["Internal"](defaultConfig);
            this.location = new _Context_Location__WEBPACK_IMPORTED_MODULE_7__["Location"]();
            this.user = new _Context_User__WEBPACK_IMPORTED_MODULE_6__["User"](defaultConfig, logger);
            this.telemetryTrace = new _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_8__["TelemetryTrace"](undefined, undefined, undefined, logger);
            this.session = new _Context_Session__WEBPACK_IMPORTED_MODULE_1__["Session"]();
        }
        this.appId = function () { return null; };
    }
    TelemetryContext.prototype.applySessionContext = function (event, itemCtx) {
        var sessionContext = this.session || (this.sessionManager && this.sessionManager.automaticSession);
        if (sessionContext) {
            if (typeof sessionContext.id === "string") {
                event.ext.app.sesId = sessionContext.id;
            }
        }
        if (this.session) {
            // If customer set session info, apply his context; otherwise apply context automatically generated
            if (typeof this.session.id === "string") {
                event.ext.app.sesId = this.session.id;
            }
            else {
                event.ext.app.sesId = this.sessionManager.automaticSession.id;
            }
        }
    };
    TelemetryContext.prototype.applyOperatingSystemContxt = function (event, itemCtx) {
        if (this.os && this.os.name) {
            event.ext.os = this.os;
        }
    };
    TelemetryContext.prototype.applyApplicationContext = function (event, itemCtx) {
        if (this.application) {
            if (typeof this.application.ver === "string") {
                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["CtxTagKeys"].applicationVersion] = this.application.ver;
            }
            if (typeof this.application.build === "string") {
                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["CtxTagKeys"].applicationBuild] = this.application.build;
            }
        }
    };
    TelemetryContext.prototype.applyDeviceContext = function (event, itemCtx) {
        if (this.device) {
            if (typeof this.device.id === "string") {
                event.ext.device.localId = this.device.id;
            }
            if (typeof this.device.ip === "string") {
                event.ext.device.ip = this.device.ip;
            }
            if (typeof this.device.model === "string") {
                event.ext.device.model = this.device.model;
            }
            if (typeof this.device.deviceClass === "string") {
                event.ext.device.deviceClass = this.device.deviceClass;
            }
        }
    };
    TelemetryContext.prototype.applyInternalContext = function (event, itemCtx) {
        if (this.internal) {
            if (typeof this.internal.agentVersion === "string") {
                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["CtxTagKeys"].internalAgentVersion] = this.internal.agentVersion; // not mapped in CS 4.0
            }
            if (typeof this.internal.sdkVersion === "string") {
                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["CtxTagKeys"].internalSdkVersion] = this.internal.sdkVersion;
            }
        }
    };
    TelemetryContext.prototype.applyLocationContext = function (event, itemCtx) {
        if (this.location) {
            if (typeof this.location.ip === "string") {
                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["CtxTagKeys"].locationIp] = this.location.ip;
            }
        }
    };
    TelemetryContext.prototype.applyOperationContext = function (event, itemCtx) {
        if (this.telemetryTrace) {
            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };
            if (typeof this.telemetryTrace.traceID === "string") {
                trace.traceID = this.telemetryTrace.traceID;
            }
            if (typeof this.telemetryTrace.name === "string") {
                trace.name = this.telemetryTrace.name;
            }
            if (typeof this.telemetryTrace.parentID === "string") {
                trace.parentID = this.telemetryTrace.parentID;
            }
            event.ext.trace = trace;
        }
    };
    TelemetryContext.prototype.applyWebContext = function (event, itemCtx) {
        if (this.web) {
            event.ext.web = event.ext.web || {};
            event.ext.web = this.web;
        }
    };
    TelemetryContext.prototype.applyUserContext = function (event, itemCtx) {
        if (this.user) {
            if (!event.tags) {
                event.tags = [];
            }
            // stays in tags
            if (typeof this.user.accountId === "string") {
                var item = {};
                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["CtxTagKeys"].userAccountId] = this.user.accountId;
            }
            // CS 4.0
            if (typeof this.user.id === "string") {
                event.ext.user.id = this.user.id;
            }
            if (typeof this.user.authenticatedId === "string") {
                event.ext.user.authId = this.user.authenticatedId;
            }
        }
    };
    TelemetryContext.prototype.cleanUp = function (event, itemCtx) {
        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].DeviceExt] && _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].objKeys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].DeviceExt]).length === 0) {
            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].DeviceExt];
        }
        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].UserExt] && _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].objKeys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].UserExt]).length === 0) {
            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].UserExt];
        }
        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].WebExt] && _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].objKeys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].WebExt]).length === 0) {
            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].WebExt];
        }
        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].OSExt] && _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].objKeys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].OSExt]).length === 0) {
            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].OSExt];
        }
        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].AppExt] && _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].objKeys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].AppExt]).length === 0) {
            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].AppExt];
        }
        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].TraceExt] && _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].objKeys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].TraceExt]).length === 0) {
            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].TraceExt];
        }
    };
    return TelemetryContext;
}());

//# sourceMappingURL=TelemetryContext.js.map

/***/ }),

/***/ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/applicationinsights-properties-js.js":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/applicationinsights-properties-js.js ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: PropertiesPlugin, TelemetryTrace, TelemetryContext, Session, SessionManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _PropertiesPlugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PropertiesPlugin */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertiesPlugin", function() { return _PropertiesPlugin__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Context/TelemetryTrace */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TelemetryTrace", function() { return _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_1__["TelemetryTrace"]; });

/* harmony import */ var _TelemetryContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TelemetryContext */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TelemetryContext", function() { return _TelemetryContext__WEBPACK_IMPORTED_MODULE_2__["TelemetryContext"]; });

/* harmony import */ var _Context_Session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Context/Session */ "../../node_modules/.pnpm/@microsoft+applicationinsights-properties-js@2.5.4/node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Session", function() { return _Context_Session__WEBPACK_IMPORTED_MODULE_3__["Session"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionManager", function() { return _Context_Session__WEBPACK_IMPORTED_MODULE_3__["_SessionManager"]; });

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.





//# sourceMappingURL=applicationinsights-properties-js.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,