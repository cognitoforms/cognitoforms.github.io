(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[25],{

/***/ "../../libs/api/services/organization-service.ts":
/*!**************************************************************************************************************!*\
  !*** C:/Users/TylerTrotter/repos/Cognito Forms/Cognito.Web.Client/libs/api/services/organization-service.ts ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.canAccessOrganization = canAccessOrganization;
exports.createOrganization = createOrganization;
exports.deleteOrganization = deleteOrganization;
exports.disableUnreadEntryTrackingSetting = disableUnreadEntryTrackingSetting;
exports.getAssignedUsers = getAssignedUsers;
exports.getExampleLocation = getExampleLocation;
exports.getFirstOwnerInfo = getFirstOwnerInfo;
exports.getFolders = getFolders;
exports.getLocale = getLocale;
exports.getOrganizationInfo = getOrganizationInfo;
exports.getOrganizationName = getOrganizationName;
exports.getUsers = getUsers;
exports.inviteUser = inviteUser;
exports.leaveOrganization = leaveOrganization;
exports.updateRequireThemes = updateRequireThemes;
var _serviceRequest = __webpack_require__(/*! ./service-request */ "../../libs/api/services/service-request.ts");
var _authentication = __webpack_require__(/*! ./authentication */ "../../libs/api/services/authentication.ts");
function getFolders(orgId) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgId, "/folders"), null, {
    method: 'GET'
  });
}
function getOrganizationName(orgCode) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgCode, "/name"), null, {
    method: 'GET'
  });
}
function getOrganizationInfo(orgId) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgId, "/info"), null, {
    method: 'GET'
  });
}
function createOrganization(name, defaultReplyToEmail, country, language, currency, timeZone) {
  var thumbprint = (0, _authentication.getThumbprint)();
  return (0, _serviceRequest.serviceRequest)('svc/organizations/create', {
    name: name,
    defaultReplyToEmail: defaultReplyToEmail,
    country: country,
    language: language,
    currency: currency,
    timeZone: timeZone,
    thumbprint: thumbprint
  });
}
function getExampleLocation(countryCode, languageCode, currencyCode, timeZoneCode) {
  return (0, _serviceRequest.serviceRequest)('svc/organizations/location/example', {
    countryCode: countryCode,
    languageCode: languageCode,
    currencyCode: currencyCode,
    timeZoneCode: timeZoneCode
  });
}
function getLocale() {
  var countryCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return (0, _serviceRequest.serviceRequest)('svc/organizations/location/locale', null, {
    method: 'GET',
    query: {
      countryCode: countryCode
    }
  });
}
function leaveOrganization(orgId) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgId, "/leave"), null);
}
function deleteOrganization(orgId) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgId), null, {
    method: 'DELETE'
  });
}
function getUsers(formId) {
  return (0, _serviceRequest.serviceRequest)('svc/organizations/users', {
    formId: formId
  }, {
    method: 'POST'
  });
}
function getAssignedUsers(formId, userIds) {
  return (0, _serviceRequest.serviceRequest)('svc/organizations/users', {
    formId: formId,
    userIds: userIds
  }, {
    method: 'POST'
  });
}
function inviteUser(orgId, email, role) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgId, "/invite"), {
    email: email,
    role: role
  }, {
    method: 'POST',
    useSubmissionToken: true
  });
}
function updateRequireThemes(orgCode, enabled) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgCode, "/update-require-form-themes"), {
    enabled: enabled
  }, {
    method: 'POST'
  });
}
function disableUnreadEntryTrackingSetting(orgCode, enabled) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgCode, "/disable-unread-entry-tracking"), {
    enabled: enabled
  }, {
    method: 'POST'
  });
}
function getFirstOwnerInfo(orgCode) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgCode, "/first-owner-info"), null, {
    method: 'GET'
  });
}
function canAccessOrganization(orgId) {
  return (0, _serviceRequest.serviceRequest)("svc/organizations/".concat(orgId, "/access"), null, {
    method: 'GET'
  });
}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,